#!/usr/bin/env bash
# Copyright 2018 Barbarians.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
# Usage: start-llap [OPTIONS]
# Launches Hive LLAP based on the supplied options.
#     --zk_connect        Kubernetes CNAME for the zookeeper ensemble

#     --rm_connect        Kubernetes CNAME address of the YARN Resource Manger

#     --igfs_connect      Kubernetes CNAME address of the IGFS cluster

#     --hms_connect       Kubernetes CNAME address of the Hive Metastore

#     --log_level         The log level for the process. Either FATAL,
#                         ERROR, WARN, INFO, DEBUG. The default is INFO.

#     --log_dir           The log directory for the process.
#                         The default is /var/log/hive.

#     --llapd_count       How many LLAP daemons to spawn on YARN.
#                         The default is 3.

#     --llapd_ram         How much RAM to grant the LLAP daemons.
#                         The default is 2g.

USER=`whoami`
HOST=`hostname -s`
DOMAIN=`hostname -d`
LOG_LEVEL=INFO
LOG_DIR=/var/log/hive
LLAPD_COUNT=3
LLAPD_RAM=2g

function print_usage() {
echo "\
Usage: start-llap [OPTIONS]
Launches Hive LLAP based on the supplied options.
     --zk_connect        Kubernetes CNAME for the zookeeper ensemble

     --rm_connect        Kubernetes CNAME address of the YARN Resource Manger

     --hms_connect       Kubernetes CNAME address of the Hive Metastore

     --igfs_connect      Kubernetes CNAME address of the IGFS cluster

     --log_level         The log level for the process. Either FATAL,
                         ERROR, WARN, INFO, DEBUG. The default is INFO.

     --log_dir           The log directory for the process.
                         The default is /var/log/hive.

     --llapd_count       How many LLAP daemons to spawn on YARN.
                         The default is 3.

     --llapd_ram         How much RAM to grant the LLAP daemons.
                         The default is 2g.
"
}

CONTROL_DIR=`readlink -f $(dirname $0)`
source $CONTROL_DIR/common-functions.sh

function create_slider_env() {
  TARGET_PATH=$SLIDER_CONF_DIR
  TARGET_FILE=$SLIDER_ENV_FILE
  process_file
}

function create_llapd_log4j() {
  TARGET_PATH=$HIVE_CONF_DIR
  TARGET_FILE=$LLAPD_LOG4J_FILE
  process_file
}

function create_config_slider_client() {
  TARGET_PATH=$SLIDER_CONF_DIR
  TARGET_FILE=$SLIDER_CLIENT_FILE
  process_file
}

optspec=":hv-:"
while getopts "$optspec" optchar; do

    case "${optchar}" in
        -)
            case "${OPTARG}" in
                zk_connect=*)
                    ZK_CONNECT=${OPTARG##*=}
                    ;;
                rm_connect=*)
                    RM_CONNECT=${OPTARG##*=}
                    ;;
                igfs_connect=*)
                    IGFS_CONNECT=${OPTARG##*=}
                    ;;
                hms_connect=*)
                    HMS_CONNECT=${OPTARG##*=}
                    ;;
                log_level=*)
                    LOG_LEVEL=${OPTARG##*=}
                    ;;
                log_dir=*)
                    LOG_DIR=${OPTARG##*=}
                    ;;
                llapd_count=*)
                    LLAPD_COUNT=${OPTARG##*=}
                    ;;
                llapd_ram=*)
                    LLAPD_RAM=${OPTARG##*=}
                    ;;
                *)
                    echo "Unknown option --${OPTARG}" >&2
                    exit 1
                    ;;
            esac;;
        h)
            print_usage
            exit
            ;;
        v)
            echo "Parsing option: '-${optchar}'" >&2
            ;;
        *)
            if [ "$OPTERR" != 1 ] || [ "${optspec:0:1}" = ":" ]; then
                echo "Non-option argument: '-${OPTARG}'" >&2
            fi
            ;;
    esac
done

COMMON_FUNCTIONS="common-functions.sh"

SLIDER_CLIENT_FILE="slider-client.xml"
LLAPD_LOG4J_FILE="llap-daemon-log4j2.properties"
SLIDER_ENV_FILE="slider-env.sh"

export SLIDER_HOME=$SLIDER_HOME
export PATH=$PATH:$SLIDER_HOME/bin

pushd /tmp
create_config_slider_client && create_slider_env && create_llapd_log4j && \
create_config_hdfs_site && create_hive_log4j && \
create_config_tez_site && create_config_hive_site && create_config_core_site && \
create_config_yarn_site && create_hadoop_env && create_hadoop_log4j && \
$HIVE_HOME/bin/hive --service llap --name llap --instances $LLAPD_COUNT --size $LLAPD_RAM && \
/tmp/llap-slider-$(date +%d%b%Y)/run.sh

popd
